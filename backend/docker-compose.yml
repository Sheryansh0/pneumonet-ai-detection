version: '3.8'

services:
  # Flask backend application
  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pneumonia-flask-app
    environment:
      - DISABLE_CAM=0
      - PORT=5000
      - PYTHONUNBUFFERED=1
    expose:
      - "5000"
    volumes:
      - ./logs:/app/logs
    networks:
      - pneumonia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy with SSL termination
  nginx:
    image: nginx:alpine
    container_name: pneumonia-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - flask-app
    networks:
      - pneumonia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot for Let's Encrypt SSL certificates
  certbot:
    image: certbot/certbot:latest
    container_name: pneumonia-certbot
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/logs:/var/log/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - pneumonia-network
    restart: unless-stopped

networks:
  pneumonia-network:
    driver: bridge
    name: pneumonia-network

volumes:
  certbot_conf:
    name: pneumonia_certbot_conf
  certbot_www:
    name: pneumonia_certbot_www